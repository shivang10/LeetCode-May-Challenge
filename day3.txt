https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/534/week-1-may-1st-may-7th/3318/

Explaination: We are given strings ransomNote and magazine. We have to check if we can make ransomNote string by taking alphabets from magazine string and each alphabet can be used only once.

First we will make HashMap to store the frequency of each element in the string magazine.
Then we will iterate over ransomNote string and whenever a character if found in both the strings, then decrement the count of that character from the hashmap otherwise, if a character is there in ransomNote but not in magazine, then we will return False.

Otherwise return true in the end.
TC: O(N + M)
SC: O(26) = constant


Code:

class Solution {
public:
    bool canConstruct(string ransomNote, string magazine) {
        int b[26] = {0};
        bool ans = true;
        for(auto i : magazine)
            b[int(i) - 97]++;
        
        for(auto i : ransomNote)
        {
            if(b[int(i) - 97] <= 0)
                ans = false;
            else
                b[int(i) - 97]--;
        }
        return ans;
        
    }
};