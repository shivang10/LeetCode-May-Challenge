https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3325/


Explaination: In this question, we have to check if any of the number is trusted by the every other number 
and that number does not trust any of the other number. So create a hashmap of given size and then for every
first element of the pair decrease the count, and for second element, increase the count.
So an element, will have frequency N - 1, if it will satisfy the given conditions.
TC: O(N)
SC: O(N)


Code:

class Solution {
public:
    int findJudge(int N, vector<vector<int>>& trust) {
        vector<int> ct(N + 1, 0);
        int i;
        for(i = 0; i<trust.size(); i++)
        {
            ct[trust[i][1]]++;
            ct[trust[i][0]]--;
        }
        
        for(i = 1; i<=N; i++)
        {
            if(ct[i] == N - 1)
            {
                return i;
            }
        }
        return -1;
        
    }
};